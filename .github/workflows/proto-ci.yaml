name: proto-ci

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  build-go-sdk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'

      - name: Install Protoc
        uses: arduino/setup-protoc@v3

      - name: Install bin dependencies
        run: make .go-deps

      - name: Build go sdk
        run: make .build-go-sdk

      - name: Install docs dependencies
        run: make .doc-deps

      - name: Build proto docs
        run: make .build-md-docs

      - name: Build json schema
        run: make .build-json-schema

      - name: Upload go artifacts
        uses: actions/upload-artifact@v4
        with:
          name: go-artifacts
          path: build/go

      - name: Upload docs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs-artifacts
          path: build/docs

  sync-proto-to-core:
    runs-on: ubuntu-latest
    needs: build-go-sdk
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v5
        with:
          name: go-artifacts
          path: build/go

      - name: Clone GuillaumeFalourd/formulas-training PRIVATE repository
        uses: GuillaumeFalourd/clone-github-repo-action@v2.3
        with:
          owner: 'stroppy-io'
          repository: 'stroppy-core'
          access-token: ${{ secrets.STROPPY_CORE_TOKEN }}
          branch: 'main'

      - name: Clone stroppy-core
        run: rm -rf stroppy-core/pkg/proto/* && cp -r build/go/* stroppy-core/pkg/proto/

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.STROPPY_CORE_TOKEN }}
          path: stroppy-core
          base: main
          branch: update-proto-${{ github.ref_name }}
          title: "Update proto from ${{ github.repository }}@${{ github.ref_name }}"
          delete-branch: true
          assignees: '${{ github.actor }}'
          reviewers: '${{ github.actor }}'
          author: '${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>'
          committer: '${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>'
          commit-message: "Update proto from ${{ github.repository }}@${{ github.ref_name }}"
          body: |
            This PR updates proto files from `${{ github.repository }}` tag `${{ github.ref_name }}`.

  build-ts-sdk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install Protoc
        uses: arduino/setup-protoc@v3

      - name: Install bin dependencies
        run: make .node-deps

      - name: Build ts sdk
        run: make .build-ts-sdk

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ts-artifacts
          path: build/ts

  release:
    runs-on: ubuntu-latest
    needs: [ build-go-sdk, build-ts-sdk ]
    steps:
      - name: Download docs artifacts
        uses: actions/download-artifact@v5
        with:
          name: docs-artifacts
          path: build/docs

      - name: Download ts artifacts
        uses: actions/download-artifact@v5
        with:
          name: ts-artifacts
          path: build/ts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          make_latest: true
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            build/**